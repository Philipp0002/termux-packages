diff -u -r ../spiped-1.6.2/lib/util/pthread_create_blocking_np.c ./lib/util/pthread_create_blocking_np.c
--- ../spiped-1.6.2/lib/util/pthread_create_blocking_np.c	2021-12-24 19:27:38.000000000 +0000
+++ ./lib/util/pthread_create_blocking_np.c	2024-05-15 16:49:33.867835103 +0000
@@ -1,6 +1,7 @@
 #include <errno.h>
 #include <pthread.h>
 #include <stdlib.h>
+#include <string.h>
 
 #include "pthread_create_blocking_np.h"
 
@@ -18,6 +19,14 @@
 	int rc_sync;		/* non-zero if synchronization failed. */
 };
 
+#ifdef __ANDROID__
+static void
+thread_signal_handler(int signum)
+{
+	pthread_exit(0);
+}
+#endif
+
 /* Routine which is executed by pthread_create(). */
 static void *
 wrapped_thread(void * cookie)
@@ -27,6 +36,15 @@
 	void * arg;
 	int rc;
 
+#ifdef __ANDROID__
+	struct sigaction actions;
+	memset(&actions, 0, sizeof(actions));
+	sigemptyset(&actions.sa_mask);
+	actions.sa_flags = 0;
+	actions.sa_handler = thread_signal_handler;
+	sigaction(SIGUSR2, &actions, NULL);
+#endif
+
 	/*
 	 * Copy the user-supplied parameters, because U will not be valid
 	 * after we signal the parent thread that we have started running.
@@ -148,7 +166,11 @@
 	 */
 	pthread_mutex_unlock(&U->mutex);
 err4:
+#ifndef __ANDROID__
 	pthread_cancel(*thread);
+#else
+	pthread_kill(*thread, SIGUSR2);
+#endif
 	pthread_join(*thread, NULL);
 err3:
 	pthread_cond_destroy(&U->cond);
